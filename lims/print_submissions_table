#!/usr/bin/env bash

LIMS_JSON="/data/ops/lims/prod/lims.json"
INNOVATION_RETENTION_DAYS=14
PATIENT_CONTRACT_RETENTION_DAYS=365
DEFAULT_RETENTION_DAYS=90

inn_submission_count=15
non_inn_submission_count=15
submission=$1 # optional HMFregXXXX id to print table for

if [[ -n "$submission" ]]; then
    submissions=$(jq --arg key "$submission" '.submissions[$key]' "${LIMS_JSON}")
else
    inn_submissions=$(jq "[.submissions[]] | map(select(.submission | startswith(\"HMFregINN\"))) | sort_by(.submission) | .[-${inn_submission_count}:] | reverse[]" "${LIMS_JSON}")
    val_submissions=$(jq "[.submissions[]] | map(select(.submission | startswith(\"HMFregVAL\"))) | sort_by(.submission) | .[-${inn_submission_count}:] | reverse[]" "${LIMS_JSON}")
    regular_submissions=$(jq "[.submissions[]] | map(select(.submission | startswith(\"HMFregINN\") or startswith(\"HMFregVAL\") or startswith(\"HMFregGIAB\") | not)) | sort_by(.submission) | .[-${non_inn_submission_count}:] | reverse[]" "${LIMS_JSON}")
    submissions=$(printf "%s\n%s\n%s" "${inn_submissions}" "${val_submissions}" "${regular_submissions}")
fi

# header
printf "#%s\t%s\t%s\t%s\t%s\t%s\t%s\n" \
    "submission" \
    "project" \
    "cohort" \
    "retention" \
    "details" \
    "analysis" \
    "sample_count"

echo "${submissions}" | jq -rc '[.submission,.project_name,.project_type,.sample_count,.analysis_type] | @tsv' | while read -r line; do
    submission=$(echo "${line}" | cut -f1)
    project=$(echo "${line}" | cut -f2)
    cohort=$(echo "${line}" | cut -f3)
    sample_count=$(echo "${line}" | cut -f4)
    analysis=$(echo "${line}" | cut -f5)
    details=""
    retention_days="${DEFAULT_RETENTION_DAYS}"

    # reset retentionDays when applicable
    if [[ "${project}" =~ ^PT\- ]]; then
        retention_days="${PATIENT_CONTRACT_RETENTION_DAYS}"
    elif [[ "${submission}" =~ ^HMFregINN[0-9]+ ]]; then
        retention_days="${INNOVATION_RETENTION_DAYS}"
    fi

    # reset some fields according to project type
    if [[ "${cohort}" == "Human research" ]]; then
        cohort="HUM-RES"
    elif [[ "${cohort}" == "non human research" || "${cohort}" == "Non human research" ]]; then
        cohort="NONHUM-RES"
    elif [[ "${cohort}" == "KG production" ]]; then
        cohort="KG"
    elif [[ "${cohort}" == "Cohort" ]]; then
        if [[ "${project}" =~ ^DRUP ]]; then
            cohort="DRUP-STAGE3"
            analysis="NA"
            sample_count="NA"
        else
            cohort="UnsupportedCohort"
        fi
    elif [[ "${cohort}" == "CORE" ]]; then
        analysis="SomaticAnalysis"
        sample_count=1 # For CORE we only add the tumor sample to SampleOverview
        sample_json=$(query_lims.pl -type samples -filter "submission=${submission}" -filter "analysis_type=Somatic_T" -json)
        if [[ $(jq 'length' <<< "$sample_json") -gt 0 ]]; then
            sample_name=$(echo "${sample_json}" | jq -r '.[-1].sample_name')
            details="${sample_name}"
        else
            details="CoreSampleNotFound"
        fi
    elif [[ "${cohort}" == "Cohort" ]]; then
        analysis="NA"
    elif [[ "${cohort}" == "Innovation" ]]; then
        cohort="INN"
    else
        cohort="CheckProjectType(${cohort})"
    fi

    # output
    printf "%s\t%s\t%s\t%s\t%s\t%s\t%s\n" \
        "${submission}" \
        "${project}" \
        "${cohort}" \
        "${retention_days}" \
        "${details}" \
        "${analysis}" \
        "${sample_count}"
done
