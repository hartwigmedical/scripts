#!/usr/bin/env bash

source message_functions || exit 1

sample=$1 && shift
reportingId=$1 && shift

if [[ -z ${sample} ]]; then
    error "No sample name provided"
fi
if [[ -z ${reportingId} ]]; then
    error "No reportingId provided"
fi

echo $sample
echo $reportingId
run_id=$( hmf_api_get "reports/created" | jq '.[] | select(.sample_name == "'${sample}'") | .run_id' | tail -1 )
echo $run_id
set_name=$( hmf_api_get 'runs/'${run_id}'' | jq -r '.set | .name' )
echo $set_name
oa_pdf=$( gsutil ls gs://patient-reporter-final-prod-1/ | grep ${reportingId} | grep pdf | tail -1 )
echo ${oa_pdf}
orange_pdf=$( api -j datasets ${sample} | jq ".[].orange_output_pdf.${sample}.path" -r )
echo ${orange_pdf}

gcloud compute ssh --zone "europe-west4-a" "ops-vm-prod-2"  --tunnel-through-iap --project "hmf-ops" --command "mkdir temp; \
gsutil cp ${oa_pdf} ~/temp; \
gsutil cp gs://diagnostic-pipeline-output-prod-1/${set_name}/orange/*.pdf ~/temp;"

gcloud compute ssh --zone "europe-west4-a" "data-vm-prod-2"  --tunnel-through-iap --project "hmf-crunch" --command "mkdir temp; \
gsutil cp ${orange_pdf} ~/temp;"


gcloud compute scp --project="hmf-ops" --zone="europe-west4-a" --recurse "ops-vm-prod-2":~/temp/ ~/
gcloud compute scp --project="hmf-crunch" --zone="europe-west4-a" --recurse "data-vm-prod-2":~/temp/ ~/


gcloud compute ssh --zone "europe-west4-a" "ops-vm-prod-2"  --tunnel-through-iap --project "hmf-ops" --command "rm -r ~/temp/ 2>&1"
gcloud compute ssh --zone "europe-west4-a" "data-vm-prod-2"  --tunnel-through-iap --project "hmf-crunch" --command "rm -r ~/temp/ 2>&1"



