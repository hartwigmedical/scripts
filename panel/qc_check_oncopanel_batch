#!/usr/bin/env bash

source locate_files || exit 1
source message_functions || exit 1

SCRIPT_NAME="$(basename "$0")"

TARGETED_PIPELINE_OUTPUT_BUCKET="gs://targeted-pipeline-output-prod-1"
EXCLUDED_EXONS="/data/resources/ops/panel/excludedExons.tsv"

print_usage() {
    self=$(basename "$0")
    echo ""
    echo "Description: Run qc_check_oncopanel_run.py script on a batch of OncoPanel runs"
    echo "Usage: $self \${sample_name} \${local_working_directory}"
    echo "Examples:"
    echo "  $self 230929 ~/tmp"
    echo "  $self 230929_HMFregTARG_FR12345678 ~/some/nested/dir"
    echo ""
    exit 1
}

main() {
  info "Started ${SCRIPT_NAME}"

  run_id_start=$1 && shift
  local_working_directory=$1 && shift

  if [[ -z ${local_working_directory} ]]; then
    info "Missing arguments"
    print_usage
  fi

  driver_gene_panel=$(locate_driver_gene_panel_38_tsv) || die "Could not find driver gene panel file"

  for targeted_run_url in $(gsutil ls "${TARGETED_PIPELINE_OUTPUT_BUCKET}" | sort -t_ -k4); do
    targeted_run_url_without_end_slash="${targeted_run_url::-1}"
    run_id="${targeted_run_url_without_end_slash##*/}"
    if [[ ${run_id} = ${run_id_start}* ]]; then
      qc_check_oncopanel_run.py \
        --gcp-run-url "${targeted_run_url}" \
        --working-directory "${local_working_directory}" \
        --driver-gene-panel "${driver_gene_panel}" \
        --excluded-exons "${EXCLUDED_EXONS}" \
          || die "Could not run QC check script for ${run_id}"
    fi
  done

  info "Create possible follow-up commands"

  nextcloud_script="${local_working_directory}/${run_id_start}_upload_to_nextcloud"
  echo "upload_panel_qc_files_to_nextcloud ${local_working_directory}" > "${nextcloud_script}" || die "Could not create nf upload command"
  recon_cnv_yaml="${local_working_directory}/${run_id_start}_recon_cnv.yaml"
  genReconCnvYaml.py "${run_id_start}" > "${recon_cnv_yaml}" || die "Could not create reconCnv YAML"
  sage_vis_yaml="${local_working_directory}/${run_id_start}_sage_vis.yaml"
  genSageVisYaml.py "${run_id_start}" > "${sage_vis_yaml}" || die "Could not create Sage visualisation YAML"
  remarks_yaml="${local_working_directory}/${run_id_start}_remarks.yaml"
  genRemarksYaml.py "${run_id_start}" > "${remarks_yaml}" || die "Could not create remarks YAML"

  info "Possible follow-up commands:"
  echo "${nextcloud_script}"
  echo "submit_hawe_execution ${recon_cnv_yaml}"
  echo "submit_hawe_execution ${sage_vis_yaml}"
  echo "submit_hawe_execution ${remarks_yaml}"

  info "Finished ${SCRIPT_NAME}"
}

main "$@"