#!/usr/bin/env bash

source message_functions || exit 1

main() {
    # fraction is fraction that you keep, expressed in format like "0.25"
    # seed is seed for RNG, integer expressed in format such as "100"
    seqtk_path=$1 && shift
    source_dir=$1 && shift
    output_dir=$1 && shift
    fraction=$1 && shift
    seed=$1 && shift

    script_name=$(basename "$0")

    if [[ -z ${seqtk_path} ]] || [[ -z "${source_dir}" ]] || [[ -z "${output_dir}" ]] || [[ -z "${fraction}" ]] || [[ -z "${seed}" ]]; then
        die "Not all input parameters to ${script_name}. Should include seqtk_path, source_dir, output_dir, fraction and seed. Exiting"
    fi

    downsampled_output_dir=${output_dir}/${fraction}
    tmp_dir=${output_dir}/${fraction}/tmp

    mkdir --parents "${downsampled_output_dir}"
    rm -rf "${tmp_dir}"
    mkdir --parents "${tmp_dir}"

    for file in "${source_dir}"/*.fastq.gz
    do
        file_name=$(basename "${file}")

        info "Handling ${file_name} for fraction ${fraction}"

        # these paths are for the uncompressed files
        downsampled_file_path=${downsampled_output_dir}/${file_name%???}
        tmp_downsampled_file_path=${tmp_dir}/${file_name%???}
        if [ ! -f "${downsampled_file_path}" ] && [ ! -f "${downsampled_file_path}.gz" ]; then
            info "Downsampling ${file_name} to ${fraction}"
            rm -f "${tmp_downsampled_file_path}"
            eval "${seqtk_path} sample -s${seed} ${file} ${fraction} > ${tmp_downsampled_file_path}"
            mv "${tmp_downsampled_file_path}" "${downsampled_file_path}"
            rm -f "${tmp_downsampled_file_path}"
        else
            info "${file_name} has already been downsampled to ${fraction}"
        fi
    done

    info "Start zipping fastq files to fastq.gz for fraction ${fraction}"
    # use 80 percent of cpus for zipping of fastq to fastq.gz
    cpu_count=$(( $(grep -c processor /proc/cpuinfo) * 8 / 10 ))
    pigz -p "${cpu_count}" "${downsampled_output_dir}"/*.fastq

    rm -rf "${tmp_dir}"

    info "Finished ${script_name} for ${fraction}"
}

main "$@"