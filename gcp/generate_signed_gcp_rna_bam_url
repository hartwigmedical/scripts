#!/usr/bin/env bash

source message_functions || exit 1
source secrets_functions || exit 1

sampleId=$1 && shift # tumor sample ID

PRESIGN_SECONDS=172800
PRESIGN_DAYS=$(expr "${PRESIGN_SECONDS}" / 60 / 60 / 24)

region="europe-west4"
internal_bam_url="gs://hmf-rna-analysis/samples/${sampleId}/${sampleId}.sorted.dups.bam"
internal_bai_url="gs://hmf-rna-analysis/samples/${sampleId}/${sampleId}.sorted.dups.bam.bai"

print_usage(){
    echo "-----"
    echo " Descr: Prints presigned RNA BAM and BAI URLs by sample ID"
    echo " Usage: $(basename $0) \${sampleId}"
    echo "  Note: URLs will be valid for ${PRESIGN_SECONDS} seconds (${PRESIGN_DAYS} days)"
    echo "-----"
    exit 1
}

    if [[ -z "${sampleId}" ]] ; then
        print_usage
    fi

 ## sanity check on existence of bam file in bucket
    gsutil -q stat "${internal_bam_url}"
    if [[ $? -eq 1 ]]; then
        warn "Unable to locate bam file in bucket (URL='${internal_bam_url}')"
          die "Bam file is not present at expected location in bucket. Exiting."
    fi

 ## sanity check on existence of bam.bai file in bucket
    gsutil -q stat "${internal_bai_url}"
    if [[ $? -eq 1 ]]; then
        warn "Unable to locate bam.bai file in bucket (URL='${internal_bai_url})"
          die "Bai file is not present at expected location in bucket. Exiting."
    fi

secret_name="gcp-hmf-download-u-hmf-database"
credentials=$(get_secret_from_secret_manager "${secret_name}") || die "Unable to retrieve secret (${secret_name})"

signed_bam_url=$(gsutil signurl -r "${region}" -d "${PRESIGN_SECONDS}s" <(echo "${credentials}") "${internal_bam_url}")
signed_bai_url=$(gsutil signurl -r "${region}" -d "${PRESIGN_SECONDS}s" <(echo "${credentials}") "${internal_bai_url}")

info "URLs for sample ID ${sampleId} (valid for ${PRESIGN_SECONDS} seconds or ${PRESIGN_DAYS} days):"

info "RNA BAM internal URL: ${internal_bam_url}"
info "RNA BAI internal URL: ${internal_bai_url}"
info "RNA BAM external URL: ${signed_bam_url}"
info "RNA BAI external URL: ${signed_bai_url}"
