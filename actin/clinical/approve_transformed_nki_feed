#!/usr/bin/env bash

source message_functions || exit 1
source locate_files || exit 1

transformed_feed_directory=$(locate_actin_transformed_feed_directory)

if [[ ! -d "${transformed_feed_directory}" ]]; then
    error "${transformed_feed_directory} not found. Exiting"
fi

transformed_contents=$(ls "${transformed_feed_directory}")
info "Transformed feed records in ${transformed_feed_directory}:"
echo "${transformed_contents}" | nl
read -r -p "Which run would you like to approve? " choice

selected_dir=$(echo "${transformed_contents}" | sed -n "${choice}p")
if [[ ${selected_dir} ]]; then
	selected_path="${transformed_feed_directory}/${selected_dir}"

	for json in "${selected_path}"/*"json"; do
		palga=$(jq '.tumorDetails["pathology"][].rawPathologyReport' "${json}")
		echo -e "\nFrom PALGA:\n${palga}"
		echo -e "\nExtracted sequencing tests:"
		jq '.sequencingTests[] | {name, results: [.results[]]}' "${json}"
		echo -e "\nExtracted IHC tests:"
		jq '.ihcTests[] | .name' "${json}"
		warnings=$(jq '.warnings' "${json}.info")
		echo -e "\nExtraction warnings:\n${warnings}"
		unclassified=$(jq '.unclassifiedText' "${json}.info")
		echo -e "\nUnclassified text:\n${unclassified}"
		if jq -e ".classifiedText // empty" "${json}.info" > /dev/null; then
			echo -e "\nClassified other conditions:"
			jq '.classifiedText' "${json}.info"
		fi
	done

	read -r -p "Proceed? (y/N) " proceed
	if [[ "${proceed}" == "y" || "${proceed}" == "Y" ]]; then
		gs_path="gs://actin-nki-clinical-feed-transformed/current/"
		gcloud storage rm "${gs_path}**"
		gcloud storage cp -r "${selected_path}/*" ${gs_path}
		echo "${selected_dir}" | gcloud storage cp - "${gs_path}transformed_feed_directory.txt"
		info "Replaced ${gs_path} with the contents of ${selected_path}"

		read -r -p "Would you like to delete local copy ${selected_path}? (y/N) " response
		if [[ "${response}" == "y" || "${response}" == "Y" ]]; then
			rm -rf "${selected_path}"
			info "Deleted ${selected_path}"
		fi

		gcloud pubsub topics publish projects/actin-nki/topics/clinical-ingestion.required \
		  --message="{\"name\": \"upload.complete\",\"timeCreated\":\"$(date -uIseconds)\",\"bucket\":\"actin-nki-clinical-feed-transformed\"}"
	fi
fi
