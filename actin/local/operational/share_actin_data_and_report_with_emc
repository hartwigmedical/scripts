#!/usr/bin/env bash

source locate_files || exit 1
source message_functions || exit 1
source actin_config || exit 1

patient=$1 && shift
namespace=$1 && shift
sync_orange=${1:-true}

if [[ -z "${patient}" ]]; then
    error "Parameter patient missing. Exiting.";
fi

if [[ -z "${namespace}" ]]; then
    error "Missing namespace [$(actin_emc_namespaces)]"
fi

sync_orange=$(echo "$sync_orange" | tr '[:upper:]' '[:lower:]')
if [[ "$sync_orange" != "true" && "$sync_orange" != "false" ]]; then
  echo "Invalid value for sync_orange: '$sync_orange'. Expected 'true' or 'false'."
  exit 1
fi

gcp_project=$(production_actin_emc_project)

actin_report_pdf="$(locate_actin_report_pdf_gcp "${gcp_project}" "${patient}" "${namespace}")"
patient_record_json="$(locate_actin_patient_record_json_gcp "${gcp_project}" "${patient}" "${namespace}")"
treatment_match_json="$(locate_actin_treatment_match_json_gcp "${gcp_project}" "${patient}" "${namespace}")"

if [[ -z "${patient_record_json}" || -z "${treatment_match_json}" || -z "${actin_report_pdf}" ]]; then
    error "Missing ACTIN data or report for ${patient}"
fi

shared_actin_data_external_uri="$(locate_next_actin_shared_data_external_uri_gcp "${gcp_project}" "${patient}" "${namespace}")"
version_folder=$(basename "${shared_actin_data_external_uri%/}")
shared_actin_data_external_latest_uri="${shared_actin_data_external_uri/%${version_folder}/}latest"

if [[ "$version_folder" != "1" ]]; then
  info "Moving ACTIN data from $shared_actin_data_external_latest_uri to $shared_actin_data_external_uri"
  gsutil -m mv "$shared_actin_data_external_latest_uri/\*" "$shared_actin_data_external_uri/"
fi

info "Copying ACTIN data for ${patient} to ${shared_actin_data_external_latest_uri}"
gsutil cp "${patient_record_json}" "${shared_actin_data_external_latest_uri}/"
gsutil cp "${treatment_match_json}" "${shared_actin_data_external_latest_uri}/"
gsutil cp "${actin_report_pdf}" "${shared_actin_data_external_latest_uri}/"

if [[ "$sync_orange" == "false" ]]; then
  info "Skipping copying of ORANGE data for ${patient}"
  exit 0
fi

orange_no_germline_json="$(locate_actin_orange_no_germline_json_gcp "${gcp_project}" "${patient}" "${namespace}")"
orange_no_germline_pdf="$(locate_actin_orange_no_germline_pdf_gcp "${gcp_project}" "${patient}" "${namespace}")"

if [[ -z "${orange_no_germline_json}" && -z "${orange_no_germline_pdf}" ]]; then
    warn "Skipping copying of ORANGE data for ${patient} as they do not exist"
else
    sample=$(locate_sequenced_sample_for_actin_patient_gcp "${gcp_project}" "${patient}" "${namespace}")
    info "Copying ORANGE data and report for ${sample} (${patient}) to ${shared_actin_data_external_latest_uri}"
    gsutil cp "${orange_no_germline_json}" "${shared_actin_data_external_latest_uri}/"
    gsutil cp "${orange_no_germline_pdf}" "${shared_actin_data_external_latest_uri}/"
fi