#!/usr/bin/env bash

source message_functions || exit 1

process=$1 && shift
sampleBarcode=$1 && shift

print_usage(){
    script=$(basename "$0")
    echo "---"
    echo "Usage: process $samplebarcode"
    echo "Usage:"
    echo " $script help" #For find the usage of this script
    echo " $script check_reports" #Check for processing all reports
    echo " $script panel_data FB123" #Generate panel data
    echo " $script fail_report FB123" #Generate fail reports
    echo " $script override_report FB123" #Generate override reports
    echo " $script upload FB123" #Upload reports to nextcloud
    echo " $script share FB123" #Share reports + archive
    exit 1
}

if [[ (-z "${process}" && -z "${sampleBarcode}") ||  $process == "help" ]]; then
    print_usage >&2
elif [[ -z "${process}" ]]; then
    error "No process provided. Exiting"
elif [[ "${process}" != "check_reports" && -z "${sampleBarcode}" ]]; then
    error "No sampleBarcode provided. Exiting"
fi

if [[ "${process}" == "check_reports" ]]; then
    python3 /data/repos/scripts/oncoact/patientreporter/reporting_pipeline/check_report_and_run_status.py --profile prod
elif [[ "${process}" == "panel_data" ]]; then
    python3 /data/repos/scripts/oncoact/patientreporter/reporting_pipeline/create_panel_report_artifacts.py ${sampleBarcode} --profile prod
elif [[ "${process}" == "fail_report" ]]; then
    python3 /data/repos/scripts/oncoact/patientreporter/reporting_pipeline/generate_fail_report.py ${sampleBarcode} --profile prod
elif [[ "${process}" == "override_report" ]]; then
    python3 /data/repos/scripts/oncoact/patientreporter/reporting_pipeline/generate_override_report.py ${sampleBarcode} --profile prod
elif [[ "${process}" == "upload" ]]; then
    python3 /data/repos/scripts/oncoact/patientreporter/reporting_pipeline/reports_to_nc.py ${sampleBarcode}
elif [[ "${process}" == "share" ]]; then
    python3 /data/repos/scripts/oncoact/patientreporter/reporting_pipeline/share_report.py ${sampleBarcode} --profile prod
else
    error "Unknown process type is used as input"
fi