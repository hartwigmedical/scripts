#!/usr/bin/env bash

source message_functions || exit 1

isolation_barcode=$1 && shift
tumor_sample_barcode=$1 && shift

if [[ -z "${isolation_barcode}" ]]; then
    error "No isolation barcode provided. Exiting"
fi

if [[ -z "${tumor_sample_barcode}" ]]; then
    error "No tumor sample barcode provided. Exiting"
fi

set=$(api -j runs 'barcode='${isolation_barcode}'&ini=Targeted.ini&status=Finished&context=DIAGNOSTIC' | jq .[].set.name | tr -d '"')
tumor_sample_barcode_lowercase=$(echo  $tumor_sample_barcode | tr '[:upper:]' '[:lower:]')

echo -e "Isolation barcode: \033[1;32m ${isolation_barcode} \033[00m"
echo -e "Sample barcode: \033[1;32m ${tumor_sample_barcode_lowercase} \033[00m"
echo -e "Set name: \033[1;32m ${set} \033[00m"

# Define file paths
recon_cnv_path="gs://panel-vis-files/recon-cnv/${tumor_sample_barcode_lowercase}/recon-cnv/*.reconCNV.html"
sage_visualisation_path="gs://panel-vis-files/sage-visualisations/${tumor_sample_barcode_lowercase}/sage-visualisation/*.sage.visualisation.zip"
chord_path="gs://panel-vis-files/vchord/${tumor_sample_barcode_lowercase}/vchord/*.vchord.prediction.tsv"

# Check if files exist before copying
if ! gsutil stat ${recon_cnv_path}; then
    error "Recon CNV file does not exist: ${recon_cnv_path}. Exiting."
    exit 1
fi

if ! gsutil stat ${sage_visualisation_path}; then
    error "Sage visualisation file does not exist: ${sage_visualisation_path}. Exiting."
    exit 1
fi

if ! gsutil stat ${chord_path}; then
    error "Chord file does not exist: ${chord_path}. Exiting."
    exit 1
fi

# Copy files if they exist
gsutil cp ${recon_cnv_path} gs://targeted-pipeline-output-prod-1/${set}/reporting
gsutil cp ${sage_visualisation_path} gs://targeted-pipeline-output-prod-1/${set}/reporting
gsutil cp ${chord_path} gs://targeted-pipeline-output-prod-1/${set}/reporting