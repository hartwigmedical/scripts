#!/usr/bin/env bash

source message_functions || exit 1
source locate_files || exit 1
source lims_functions || exit 1
source metadata_functions || exit 1

run_dir=$1 && shift
correction_extern=$1 && shift

if [[ -z "${run_dir}" ]]; then
    error "No run dir provided. Exiting"
fi

if [[ -z "${correction_extern}" ]]; then
    error "Missing correction extern argument"
fi

tumor_sample=$(load_tumor_sample_from_metadata ${run_dir})
tumor_sample_barcode=$(load_tumor_sample_barcode_from_metadata ${run_dir})

if [[ -z "${tumor_sample_barcode}" ]]; then
    info "Could not load tumor sample barcode from metadata. Attempt to resolve from LIMS."
    tumor_sample_barcode=$(find_barcode_for_sample_name ${tumor_sample})
fi

ref_sample=$(load_ref_sample_from_metadata ${run_dir})
ref_sample_barcode=$(load_ref_sample_barcode_from_metadata ${run_dir})

if [[ -z "${ref_sample_barcode}" ]]; then
    info "Could not load ref sample barcode from metadata. Attempting to resolve from LIMS."
    ref_sample_barcode=$(find_ref_barcode_for_sample_name ${tumor_sample})
fi

if [[ -z "${ref_sample}" || -z "${ref_sample_barcode}" || -z "${tumor_sample_barcode}" ]]; then
    warn "Incomplete information for reporter. Exiting"
    warn "  ref_sample name: ${ref_sample}"
    warn "  ref sample barcode: ${ref_sample_barcode}"
    warn "  tumor_sample name: ${tumor_sample}"
    warn "  tum sample barcode: ${tumor_sample_barcode}"
    exit 1;
fi

output_dir="${HOME}/reports/pilot"

## running patient reporter
ref_sample_mandatory=1

if [[ $( cat ${run_dir}/purple/${tumor_sample}.purple.qc | grep QCStatus | cut -f2 ) == "FAIL_NO_TUMOR" ]]; then
    fail_reason="insufficient_tcp_deep_wgs"
else
    fail_reason="sufficient_tcp_qc_failure"
fi

orange_json="$(locate_orange_json ${run_dir})"
pipeline_version_file="${run_dir}/pipeline.version"

if [[ ${correction_extern} == "extern" ]]; then
    pilot_do_run_qc_fail_patient_reporter \
        ${tumor_sample} ${tumor_sample_barcode} ${ref_sample} ${ref_sample_barcode} ${fail_reason} ${ref_sample_mandatory} \
        -corrected_report \
        -corrected_report_extern \
        -output_dir_report ${output_dir} \
        -output_dir_data ${output_dir} \
        -pipeline_version_file ${pipeline_version_file} \
        -orange_json ${orange_json} \
        "$@"
fi

if [[ ${correction_extern} == "intern" ]]; then
    pilot_do_run_qc_fail_patient_reporter \
        ${tumor_sample} ${tumor_sample_barcode} ${ref_sample} ${ref_sample_barcode} ${fail_reason} ${ref_sample_mandatory} \
        -corrected_report \
        -output_dir_report ${output_dir} \
        -output_dir_data ${output_dir} \
        -pipeline_version_file ${pipeline_version_file} \
        -orange_json ${orange_json} \
        "$@"
fi