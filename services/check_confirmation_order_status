#!/usr/bin/env bash

source message_functions || exit 1

confirmation_order=$1

if [[ -z "${confirmation_order}" ]]; then
    error "Provide a confirmation_order. Exiting"
fi

lama_json=$(curl -s -X 'GET' -H 'accept: */*' "http://lama.prod-1/api/hss/order-confirmation/${confirmation_order}")
api_samples_json=$(hmf_api_get "samples?submission=${confirmation_order}" | jq '[.[] | select(.status != "Unregistered")]')
api_runs_json=$(hmf_api_get "runs?set_name_contains=${confirmation_order}")

lama_analysis_type=$(echo "${lama_json}" | jq -r '.servicesSamples | .[0].dataOutputLevel')
lama_total_samples=$(echo "${lama_json}" | jq '.servicesSamples | .[] | length')

api_total_samples=$(echo "${api_samples_json}" | jq 'length')
api_total_runs=$(echo "${api_runs_json}" | jq 'length')
api_ready_samples=$(echo "${api_samples_json}" | jq -c '[.[] | select(.status=="Ready")] | length')
api_deleted_samples=$(echo "${api_samples_json}" | jq -c '[.[] | select(.status=="Deleted")] | length')
api_validated_runs=$(echo "${api_runs_json}" | jq -c '[.[] | select(.status=="Validated")] | length')

info "Checking confirmation order ${confirmation_order}, output '${lama_analysis_type}')"
info "${lama_total_samples} LAMA samples total"
info "${api_total_samples} API samples total"
info "${api_ready_samples} API samples finished"
info "${api_deleted_samples} API samples deleted"
info "${api_total_runs} API runs total"
info "${api_validated_runs} API runs finished"
info ""

info "Commands for further inspection:"
info "  curl -s -X 'GET' -H 'accept: */*' \"http://lama.prod-1/api/hss/order-confirmation/${confirmation_order}\" | jq"
info "  api samples ${confirmation_order} submission"
info "  api runs ${confirmation_order} submission"
info ""

req_yield=$(echo "${lama_json}" | jq -r '. | if has("totalYieldRequired") and .totalTieldRequired != "" then .totalYieldRequired else 0 end')
if [[ ! "$req_yield" =~ ^[[:digit:]]+$ ]]; then
    die "Required yield [$req_yield] contains more than just digits"
fi

measured_yield=$(echo "api_samples_json" | jq '[.[] | select(.status=="Ready" or .status=="Deleted") | .yld] | add')
measured_yield_gbase=$((measured_yield / 1000000000))
if [[ "${measured_yield_gbase}" -lt "${req_yield}" ]]; then
    warn "INSUFFICIENT YIELD: Submission requires ${req_yield} GBase in total but currently has ${measured_yield_gbase} GBase!"
else
    info "Total submission yield is sufficient: required ${req_yield} and measured ${measured_yield_gbase} GBase"
fi


info "If all OK then continue with gather step:"
echo " gather_confirmation_order ${confirmation_order}"
echo ""