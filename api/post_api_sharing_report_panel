#!/bin/bash

source message_functions || exit 1
source locate_reporting_api || exit 1

sample_barcode=$1 && shift
sample=$1 && shift
report_type=$1 && shift
report_source=$1 && shift
sharedReportLocation=$1 && shift
sharedJsonLocation=$1 && shift
purpleDriverCatalogLocation=$1 && shift
purplePurityLocation=$1 && shift
purpleSomaticVcfLocation=$1 && shift
purpleSvVcfLocation=$1 && shift
reportPurpleCnvGeneLocation=$1 && shift
purpleReportedSomaticVcfLocation=$1 && shift
sampleQcReportPdf=$1 && shift
sampleQcReportPng=$1 && shift
sampleQcDeaminationPdf=$1 && shift
sampleQcDeaminationPng=$1 && shift

## extract correct report created id
report_created_id=$(extract_reporting_id "${sample_barcode}" "${report_type}" ${report_source} "prod")
cohort=$(extract_cohort_on_created_object "${sample_barcode}" "${report_type}" ${report_source} "prod")

if [[ (${cohort} == '"COREDB"' && ${sample} == "COREDB01"*) || ${cohort} == '"TARGTO"' ||  (${cohort} == '"GENAYA"' && ${sample} == "GAYA0101"*) ]]; then
  publish_to_portal="true"
else
  publish_to_portal="false"
fi

purpleDriverCatalogFile=$(echo ${purpleDriverCatalogLocation} | awk -F 'targeted-pipeline-output-prod-1/' '{print $2}')
purpleDriverCatalogBucket=$(echo ${purpleDriverCatalogLocation} | tr "/" " " | awk '{print $2}')

purplePurityFile=$(echo ${purplePurityLocation} | awk -F 'targeted-pipeline-output-prod-1/' '{print $2}')
purplePurityBucket=$(echo ${purplePurityLocation} | tr "/" " " | awk '{print $2}')

purpleSomaticVcfFile=$(echo ${purpleSomaticVcfLocation} | awk -F 'targeted-pipeline-output-prod-1/' '{print $2}')
purpleSomaticVcfBucket=$(echo ${purpleSomaticVcfLocation} | tr "/" " " | awk '{print $2}')

purpleSvVcfFile=$(echo ${purpleSvVcfLocation} | awk -F 'targeted-pipeline-output-prod-1/' '{print $2}')
purpleSvVcfBucket=$(echo ${purpleSvVcfLocation} | tr "/" " " | awk '{print $2}')

purpleCnvGeneFile=$(echo ${reportPurpleCnvGeneLocation} | awk -F 'targeted-pipeline-output-prod-1/' '{print $2}')
purpleCnvGeneBucket=$(echo ${reportPurpleCnvGeneLocation} | tr "/" " " | awk '{print $2}')

reportFile=$(echo ${sharedReportLocation} | tr "/" " " | awk '{print $3}')
reportBucket=$(echo ${sharedReportLocation} | tr "/" " " | awk '{print $2}')

jsonFile=$(echo ${sharedJsonLocation} | tr "/" " " | awk '{print $3}')
jsonBucket=$(echo ${sharedJsonLocation} | tr "/" " " | awk '{print $2}')

purpleReportedSomaticVcfFile=$(echo ${purpleReportedSomaticVcfLocation} | awk -F 'targeted-pipeline-output-prod-1/' '{print $2}')
purpleReportedSomaticVcfBucket=$(echo ${purpleReportedSomaticVcfLocation} | tr "/" " " | awk '{print $2}')

sampleQcReportFilePdf=$(echo ${sampleQcReportPdf} | awk -F 'targeted-pipeline-output-prod-1/' '{print $2}')
sampleQcReportBucketPdf=$(echo ${sampleQcReportPdf} | tr "/" " " | awk '{print $2}')

sampleQcReportFilePng=$(echo ${sampleQcReportPng} | awk -F 'targeted-pipeline-output-prod-1/' '{print $2}')
sampleQcReportBucketPng=$(echo ${sampleQcReportPng} | tr "/" " " | awk '{print $2}')

sampleQcDeaminationFilePdf=$(echo ${sampleQcDeaminationPdf} | awk -F 'targeted-pipeline-output-prod-1/' '{print $2}')
sampleQcDeaminationBucketPdf=$(echo ${sampleQcDeaminationPdf} | tr "/" " " | awk '{print $2}')

sampleQcDeaminationFilePng=$(echo ${sampleQcDeaminationPng} | awk -F 'targeted-pipeline-output-prod-1/' '{print $2}')
sampleQcDeaminationBucketPng=$(echo ${sampleQcDeaminationPng} | tr "/" " " | awk '{print $2}')

#portal files
reportPdf=$(printf '{"%s": "%s", "%s": "%s"}' "bucket" "${reportBucket}" "path" "${reportFile}")
reportJson=$(printf '{"%s": "%s", "%s": "%s"}' "bucket" "${jsonBucket}" "path" "${jsonFile}")
reportPurpleDriverCatalog=$(printf '{"%s": "%s", "%s": "%s", "%s": "%s"}' "bucket" "${purpleDriverCatalogBucket}" "path" "${purpleDriverCatalogFile}" "folder" "RUO")
reportPurplePurity=$(printf '{"%s": "%s", "%s": "%s", "%s": "%s"}' "bucket" "${purplePurityBucket}" "path" "${purplePurityFile}" "folder" "RUO")
reportPurpleSomaticVcf=$(printf '{"%s": "%s", "%s": "%s", "%s": "%s"}' "bucket" "${purpleSomaticVcfBucket}" "path" "${purpleSomaticVcfFile}" "folder" "RUO")
reportPurpleCnvGene=$(printf '{"%s": "%s", "%s": "%s", "%s": "%s"}' "bucket" "${purpleCnvGeneBucket}" "path" "${purpleCnvGeneFile}" "folder" "RUO")
reportPurpleSvVcf=$(printf '{"%s": "%s", "%s": "%s", "%s": "%s"}' "bucket" "${purpleSvVcfBucket}" "path" "${purpleSvVcfFile}" "folder" "RUO")
reportPurpleReportedSomaticVcf=$(printf '{"%s": "%s", "%s": "%s", "%s": "%s"}' "bucket" "${purpleReportedSomaticVcfBucket}" "path" "${purpleReportedSomaticVcfFile}" "folder" "RUO")
reportSampleQcReportPdf=$(printf '{"%s": "%s", "%s": "%s", "%s": "%s"}' "bucket" "${sampleQcReportBucketPdf}" "path" "${sampleQcReportFilePdf}" "folder" "RUO")
reportSampleQcReportPng=$(printf '{"%s": "%s", "%s": "%s", "%s": "%s"}' "bucket" "${sampleQcReportBucketPng}" "path" "${sampleQcReportFilePng}" "folder" "RUO")
reportSampleQcDeaminationPdf=$(printf '{"%s": "%s", "%s": "%s", "%s": "%s"}' "bucket" "${sampleQcDeaminationBucketPdf}" "path" "${sampleQcDeaminationFilePdf}" "folder" "RUO")
reportSampleQcDeaminationPng=$(printf '{"%s": "%s", "%s": "%s", "%s": "%s"}' "bucket" "${sampleQcDeaminationBucketPng}" "path" "${sampleQcDeaminationFilePng}" "folder" "RUO")

share_standard_files="false"
data=$(echo -e "${reportPdf}\n${reportJson}\n${reportPurpleDriverCatalog}\n${reportPurplePurity}\n${reportPurpleSomaticVcf}\n${reportPurpleCnvGene}\n${reportPurpleSvVcf}\n${reportPurpleReportedSomaticVcf}\n${reportSampleQcReportPdf}\n${reportSampleQcReportPng}\n${reportSampleQcDeaminationPdf}\n${reportSampleQcDeaminationPng}" | jq -s '{"report_created_id":'${report_created_id}', "publish_to_portal":"'${publish_to_portal}'", "share_standard_files":"'${share_standard_files}'", "report_files": .}')
echo ${data} | jq

if [[ ${report_type} == "oncopanel_result_report"* ]]; then
  data=$(echo -e "${reportPdf}\n${reportJson}\n${reportPurpleDriverCatalog}\n${reportPurplePurity}\n${reportPurpleSomaticVcf}\n${reportPurpleCnvGene}\n${reportPurpleSvVcf}\n${reportPurpleReportedSomaticVcf}\n${reportSampleQcReportPdf}\n${reportSampleQcReportPng}\n${reportSampleQcDeaminationPdf}\n${reportSampleQcDeaminationPng}" | jq -s '{"report_created_id":'${report_created_id}', "publish_to_portal":"'${publish_to_portal}'", "share_standard_files":"'${share_standard_files}'", "report_files": .}')
else
  data=$(echo -e "${reportPdf}\n${reportJson}" | jq -s '{"report_created_id":'${report_created_id}', "publish_to_portal":"'${publish_to_portal}'", "share_standard_files":"'${share_standard_files}'", "report_files": .}')
fi

echo ${data} | jq

if [[ -z ${report_created_id} ]];then
  error "No reporting created entry is present. Add entry first in created endpoint"
  exit 1
fi

info "Adding entry to shared API"
api_curl_post "reports/shared" "${data}" "prod"