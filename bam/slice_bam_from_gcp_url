#!/usr/bin/env bash

source locate_files || exit 1
source message_functions || exit 1
source secrets_functions || exit 1

# also works on crams

gcp_bam_url=$1 && shift
slicing_bed=$1 && shift
output_bam=$1 && shift

if [[ -z "${gcp_bam_url}" || -z "${slicing_bed}" || -z "${output_bam}" ]]; then
    error "Not all input params provided. Needs gcp_bam_url, slicing_bed, and output_bam. Exiting"
fi

secret_name="gcp-hmf-download-u-hmf-database"
region="europe-west4"
project="hmf-database"
presign_seconds=28800  # 8 hours
samtools=/data/tools/samtools/1.10/samtools

ref_genome=$(locate_ref_genome_37_fasta_file)
if [[ "${gcp_bam_url}" == *.bam ]]; then
  gcp_bai_url="${gcp_bam_url}.bai"
elif [[ "${gcp_bam_url}" == *.cram ]]; then
  gcp_bai_url="${gcp_bam_url}.crai"
else
  die "Unrecognized file ending. Should be .bam or .cram: ${gcp_bam_url}"
fi

info "Retrieve service account credentials required for signing [secret:${secret_name}]"
credentials=$(get_secret_from_secret_manager "${secret_name}") || die "Unable to retrieve secret (${secret_name})"

info "Signing URL's"
signed_bam_url=$( \
  gsutil signurl -r "${region}" -b "${project}" -d "${presign_seconds}s" <(echo "${credentials}") "${gcp_bam_url}" | grep -v 'Signed URL' | cut -f4 \
) || die "Could not get signed bam url"

signed_bai_url=$( \
  gsutil signurl -r "${region}" -b "${project}" -d "${presign_seconds}s" <(echo "${credentials}") "${gcp_bai_url}" | grep -v 'Signed URL' | cut -f4 \
) || die "Could not get signed bai url"

info "Creating slice using ${slicing_bed}"
${samtools} view -T ${ref_genome} \
    -M "${signed_bam_url}" \
    -X "${signed_bai_url}" \
    -L "${slicing_bed}" \
    -o "${output_bam}" || die "Could not create sliced BAM"

info "Create index file for ${output_bam}"
${samtools} index "${output_bam}" || die "Could not create index file"

info "Done creating slice. Written output to ${output_bam}"

