#!/usr/bin/env bash

source message_functions || exit 1

providedId=$1
patientReporter=$2


# check if an id was provided

if [[ -z ${providedId} ]] || [[ ${providedId} == patient_reporter ]]; then
	error "Please provide a patient hospital-id or pathology number to get the corresponding isolation barcode(s).
	To get the patient-reporter info for a sample, please provide the isolation barcode followed by 'patient_reporter'."
    exit

# get patient reporter data for provided id if necessary  

elif [[ ${patientReporter} == patient_reporter ]]; then
  patient_reporter_data=$(lama_api_get queries/patient-reporter/isolation-barcode/${providedId} 2> /dev/null | jq -r )
  if [ $(echo $patient_reporter_data | wc -w) != 0 ]; then
    echo -e "The patient reporter data for sample with barcode ${providedId} is\n${patient_reporter_data}"
    exit
  else
    echo "No patient reporter data found for provided isolation barcode."
    exit
  fi

#get barcodes for hospital patient or pathology id

else
  # get barcode + trim non-alphabetic chars + separate barcodes by space when multiple barcodes
  isolation_barcode_reporting_id=$(lama_api_get queries/isolation-barcodes/reporting-id/${providedId} 2> /dev/null | sed 's/[^a-zA-Z0-9]//g' | sed 's/F/  F/2g')
  isolation_barcode_pa_nr=$(lama_api_get queries/isolation-barcodes/pathology-nr/${providedId} 2> /dev/null | sed 's/[^a-zA-Z0-9]//g' | sed 's/F/  F/2g')
  
  if [ $(echo $isolation_barcode_reporting_id | wc -w) != 0 ]; then
  	echo -e "The isolation barcode(s) for sample with patient hospital-id ${providedId}: \033[1;32m ${isolation_barcode_reporting_id} \033[00m"
    exit
  elif [ $(echo $isolation_barcode_pa_nr | wc -w) != 0 ]; then
  	echo -e "The isolation barcode(s) for sample with pathology number ${providedId}: \033[1;32m ${isolation_barcode_pa_nr} \033[00m"
    exit
  else
    echo "No isolation barcode found for provided patient hospital or pathology id."
    exit
  fi

fi
