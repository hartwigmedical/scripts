name: "sage-rerun"
version: "0.0.1"
storagePath: "gs://jt-sage-rerun-output"
externalInputs:
  - name: run-uri
    location: "${run_uri}"
  - name: resources-uri
    location: "${resources_uri}"
stages:
  - name: "run-sage"
    image: "europe-west4-docker.pkg.dev/hmf-build/hmf-docker-crunch/rerun-sage"
    version: "0.0.1"
    command: "bash /config/run.sh"
    configFiles:
      run.sh: |
        #!/usr/bin/env bash
        set -eo pipefail

        # Internal working variables; external variables are referenced as, etc.
        WORK_DIR="/tmp/work"
        INPUT_DIRECTORY="/in/run-uri"
        RESOURCES_BUCKET="/in/resources-uri"
        SAMPLE_ID=${sample_id}

        # Additional parameters
        SAGE_JAR="compar.jar"  # This jar is included in the Docker image.

        # Derive internal paths based on external inputs
        BASE_DIR="$WORK_DIR"
        INPUT_DIR="$TRUTH_BUCKET"
        OUT_DIR="$BASE_DIR/sage_$SAMPLE_ID"
        OUTPUT_ID="$SAMPLE_ID"

        THREADS="$(nproc)"
        echo "▶️  Running Sage for $SAMPLE_ID ($THREADS threads)"

        java -XX:MaxRAMPercentage=90 \
            -jar $SAGE_JAR \
            -tumor "$SAMPLE_ID" \
            -tumor_bam "$INPUT_DIRECTORY/$SAMPLE_ID.bam" \
            -hotspots "$RESOURCES_BUCKET/sage/38/KnownHotspots.somatic.38.vcf.gz" \
            -high_depth_mode \
            -jitter_param_dir "$INPUT_DIRECTORY" \
            -high_confidence_bed "$RESOURCES_BUCKET/giab_high_conf/38/HG001_GRCh38_GIAB_highconf_CG-IllFB-IllGATKHC-Ion-10X-SOLID_CHROM1-X_v.3.3.2_highconf_nosomaticdel_noCENorHET7.bed.gz" \
            -panel_bed "$RESOURCES_BUCKET/sage/38/ActionableCodingPanel.38.bed.gz" \
            -coverage_bed "$RESOURCES_BUCKET/sage/38/CoverageCodingPanel.38.bed.gz" \
            -ref_genome "$RESOURCES_BUCKET/38/Homo_sapiens_assembly38.alt.masked.fasta" \
            -ref_genome_version V38 \
            -ensembl_data_dir "$RESOURCES_BUCKET/ensembl_data_cache/38/" \
            -output_vcf "$OUT_DIR/$SAMPLE_ID.sage.somatic.vcf.gz" \
            -bqr_write_plot \
            -threads "$THREADS"

        echo "▶️  Sage completed"

        echo "▶️  Transferring output to /out/"
        cp -r "$OUT_DIR" /out/

        echo "✅  Done"
    options:
      backoffLimit: 2
      annotations:
        gke-gcsfuse/ephemeral-storage-request: 150Gi # Can be optimized?
      stageTimeoutMinutes: 120
      resources:
        requests:
          cpu: 16
          memory: 32Gi
          storage: 150Gi # Can be optimized?
      node:
        spot: true
        pool: "n2d-standard-32-pool-2"
    inputStages:
      - run-uri
      - resources-uri