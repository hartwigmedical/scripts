name: "merge-crams"
version: "0.0.1-beta10"
storagePath: "gs://merged-crams-ultima"
externalInputs:
  - name: "source-files"
    location: "${input_bucket}"
  - name: "reference-folder"
    location: "${reference_bucket}"
stages:
  - name: "merge-and-index"
    image: "europe-west4-docker.pkg.dev/hmf-build/hmf-docker-crunch/merge-crams"
    version: "1.0.0"
    options:
      stageTimeoutMinutes: 300
      annotations:
        gke-gcsfuse/ephemeral-storage-request: 800Gi
      resources:
        requests:
          cpu: "${threads}"
          memory: "100Gi"
          storage: "800Gi"
      node:
        spot: true
        pool: "n2d-standard-32-pool-1"
    inputStages:
      - source-files
      - reference-folder
    command: "bash /config/run.sh"
    configFiles:
      run.sh: |
        #!/usr/bin/env bash
        set -e -o pipefail
        
        prefix="/in/source-files/"

        REFERENCE_PATH="/in/reference-folder/${reference_file}"
        OUTPUT_FILE="/out/${sample_id}.cram"
        OUTPUT_FILE_INDEX="/out/${sample_id}.cram.crai"

        echo "DEBUG: Input: ${input_file_paths}"

        paths=$(sed 's/;/\n/g' <<< "${input_file_paths}" | xargs -I% echo "$prefix%" | tr '\n' ' ')

        echo "DEBUG: Paths: $paths"

        # 1. Merge all input CRAMs into a single output CRAM
        samtools merge -@ 20 -O CRAM --reference "$REFERENCE_PATH" "$OUTPUT_FILE" $paths -f
        
        echo "DEBUG: CRAM is merged"

        # 2. Index the final merged CRAM
        samtools index -@ 20 "$OUTPUT_FILE" "$OUTPUT_FILE_INDEX"

        echo "DEBUG: CRAM is indexed"
        